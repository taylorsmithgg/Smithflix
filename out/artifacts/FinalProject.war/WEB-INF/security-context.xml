<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
        xmlns:sec="http://www.springframework.org/schema/security"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:beans="http://www.springframework.org/schema/beans"
        xmlns:context="http://www.springframework.org/schema/context"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="com.finalproject"/>
    <context:annotation-config/>

    <!-- Enable method level Spring Security by annotations  -->
    <sec:global-method-security  pre-post-annotations="enabled"/>
    <sec:http auto-config="true" use-expressions="true">

        <!-- Page level Spring Security : Intercept access to resources in /pages/secure/** -->
        <sec:intercept-url pattern="/secure/**" access="hasRole('ROLE_MODERATOR')"/>

        <!-- Page level Spring Security : Permit access to resources in /pages/unsecure/** -->
        <sec:intercept-url pattern="/public/**" access="permitAll"/>

        <!--&lt;!&ndash; Page level Spring Security : Intercept access to resources in /** &ndash;&gt;-->
        <!--<sec:intercept-url pattern="/**" access="hasRole('ROLE_MODERATOR')"/>-->

        <!--&lt;!&ndash; Page level Spring Security : Enable Primefaces &ndash;&gt;-->
        <!--<sec:intercept-url pattern="/resources/javax.faces.resource/**" access="permitAll"/>-->

        <!-- Define login page for Spring Security -->
        <sec:form-login login-page="/public/index.jsf"/>

        <!-- Define logout properties for Spring Security -->
        <sec:logout invalidate-session="true" logout-success-url="/"></sec:logout>
    </sec:http>

    <!-- Set customUserDetailsService class as the authentication Manager for Spring Security-->
    <sec:authentication-manager alias="authenticationManager">
        <sec:authentication-provider user-service-ref="customerUserDetailsService">
            <sec:password-encoder hash="plaintext"></sec:password-encoder>
        </sec:authentication-provider>
    </sec:authentication-manager>

    <!-- Inject authentication Manager to our LoginBean -->
    <beans:bean id="loginBean" name="loginBean" class="com.finalproject.mb.LoginMB" scope="prototype">
        <beans:property name="authenticationManager" ref="authenticationManager"></beans:property>
    </beans:bean>
</beans:beans>